##############################################################################
# Problem 
# Description       : This program does the Sentiment Analysis of three 
#                     different topics using Viralheat Sentiment Analysis API
#                     (referred hereafer as VSA API). Sentiment Analysis deals
#                     with the problem of deciding positive or negative 
#                     sentiment about a topic using text that provides some
#                     description about the topic. The text used in this 
#                     program is tweets from users of twitter microblogging 
#                     website. 
#
# Usage             : To run this program, use following command:
#
#                     python sentiment_analysis.py
#                      
# Algorithm         : 1) This program first iterates over the topics list.
#                        This list has the topics hardcoded into it. These
#                        are the topics for which sentiment has to be decided.
#
#                     2) Then for each topic from the list, this program 
#                        retrieves the recent 1000 tweets from Twitter using
#                        its Search API. These tweets are
#                        presented in the form of 10 JSON object. 
#                        Each JSON object has upto 100 tweets.
#
#                        An example of JSON file (object returned from twitter)
#                        is as follows:
#
#                        {
#                           "completed_in":0.034,
#                            "max_id":279138332552859648,
#                            .
#                            .
#                            "results":[
#                            {
#                                "created_at":"Thu, 13 Dec 2012 08:18:59 +0000"
#                                "from_user":"MadennisCrazy4M",
#                                .
#                                .
#                                "text":"MADONNA IS #6 ON FACEBOOK\u2019S TOP 
#                                        PUBLIC FIGURES LIST\n\n1. Barack Obama
#                                        n2. Mitt Romney\n3. 
#                                        One Direction\n4. 
#                                        Tim... http:\/\/t.co\/kkJQQjIf",
#                                .
#                                .
#                            }
#                        }                            
#                       
#                       The text field of each of the JSON object has the 
#                       actual tweet message of our interest.        
#               
#                     3) This program iterates over the 10 JSON objects and 
#                        fetches tweet's text. The text of each tweet is then
#                        fed into VSA API. VSA API returns another JSON object
#                        showing probability of sentiment, text of tweet and
#                        sentiment of the tweet.
#                       
#                        Sample output from the VSA API is :
#                        {
#                           "prob":0.998082867136588,
#                           "text":"RT @planetjedward:", 
#                           "mood":"positive"
#                        }
#
#                       Here the mood field denotes the positive ot negative
#                       sentiment of the tweet. 
#           
#                     4) The number of all positive and negative tweets are 
#                        counted and percentage of positive and negative tweets
#                        are displayed to the user as final output. 
#                       
#                       Sample output generated by program:
#
#                       Sentiment Percentages:   
#                       Positive:   49.9437570304
#                       Negative:   49.1563554556
#
#
# Author            : Swapnil Nawale 
#
# Date              : 12/12/12 :)
#
# Version           : 1.0
#
# Prog. Language    : Programming Language used for this program is Python
#                     (Version 2.7.3).
#                     The basic Python code, used in this program, is
#                     learnt from the book "Think Python - How to Think Like 
#                     a Computer Scientist (by Allen B. Downey)" and from
#                     Google's Python Class , present online at 
#                     http://code.google.com/edu/languages/google-python-class/
#                       
# Text-Editor used  : vim editor on Linux Platform
###############################################################################

'''
import statements to include Python's in-built module functionalities in the
program
'''
# urllib2 module to open url and read the data from it
import urllib2

# json module to parse json file from twitter and viralheat
import json

'''
Define the list of topics to be used in Sentiment Analysis. The spaces
in these topics is replaced by "%20" in order to proper URL encoding in
API calls
'''
topics_list = ["Barack%20Obama", "Apple%20Maps", "Twilight"]

'''
Iterate over the topics_list to process each topic.
'''
for topic in topics_list:

    ''' 
    Initialize counts to be used in percentage calculation of positive
    and negative sentiments
    '''
    total_tweets_count = 0 
    positive_count = 0 
    negative_count = 0 
   
    '''
    Retrieve recent 1000 tweets per topic using twitter API. 
    These 1000 tweets are retrieved in 10 different pages having JSON objects.
    ''' 
    for page in range(1,10):
        
        '''
        Make a call to Twitter's search API. Here rpp refers to results per 
        page which are 100 in this case and page refers to current page number.
        This page number will range from 1 through 10. So we will process 10 
        pages each having 100 tweets giving us 1000 tweets per topic.

        The code to open an URL is learnt from a stackoverflow forum question
        present at URL:
        
        http://stackoverflow.com/questions/4302027/how-to-open-a-url-in-python
    
        I have followed the code given the answer by user : pyfunc.
        '''
        response = urllib2.urlopen('http://search.twitter.com/search.json?q='\
                                    + topic + '&rpp=100&page=' + str(page))

        '''    
        Read the data returned by search API and do the JSON parsing. The JSON
        parsing in Python is learnt a the stackoverflow forum question 
        present in the URL:
        
        http://stackoverflow.com/questions/8220748/parsing-json-python
        
        '''
        
        json_data = json.loads(response.read())
        json_results = json_data['results'] 
        
        # retrieve the tweet text from each JSON object parsed above
        for tweets in json_results:
            tweet = tweets['text']

            '''
            Set the default encoding of tweet's text to UTF to avoid issues 
            with tweets having unicode characters. 
            '''
            tweet = tweet.encode("UTF-8")

            '''
            Make a call to VSA API. Here API Key is the API generated by 
            Viralheat for my user id  and text is the tweet obtained above.
            The tweet needs to be properly URL encoded in order to make
            call to VSA API. So, here URL encoding is done on tweet using
            bulitin function urllib2.quote()
            '''

            api_str = 'http://www.viralheat.com/api/sentiment/review.json?\
                api_key=<insert_your_api_key>&text='+ urllib2.quote(tweet)
           
            '''
            Read the response from VSA API and fetch the sentiment from the 
            JSON object returned by VSA API. Increment the counters for 
            Positive and Negative tweets based upon sentiment fetched.
            Also maintain a counter for total number of tweets.

            VSA API sometimes threw exceptions sometimes and gave a blank
            sentiment for tweets. So, I needed to do exception handling.
            We will just continue the loop in case of exception occurs 
            or in case no sentiment is returned by VSA API. 
            '''
            try:
                api_response = urllib2.urlopen(api_str)
                api_data = json.loads(api_response.read())
                
                #print tweet
                
                sentiment =  api_data['mood']
                
                #print sentiment

                if sentiment == "positive":
                    positive_count = positive_count + 1
                elif sentiment == "negative":
                    negative_count =  negative_count + 1
                else:
                    continue

                total_tweets_count = total_tweets_count + 1

            except Exception as e:
                continue
   

    # display the final percentage of negative and positive sentiments 
    print "Sentiment Percentages:   "
    
    print "Positive:\t" + str((float(positive_count)/\
                               float(total_tweets_count)) * 100)
    print "Negative:\t" + str((float(negative_count)/\
                               float(total_tweets_count)) * 100)
